{"version":3,"file":"static/js/150.150855b8.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/PageHero/PageHero.styled.js","components/PageHero/PageHero.jsx","components/CharactersGallery/CharactersGallery.styled.js","components/CharactersGallery/CharactersGallery.jsx","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.jsx","pages/HomePage.jsx","services/charactersApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Error = styled.p`\n  color: #ff0000;\n  font-size: 16px;\n`;\n","import { Error } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ children }) => {\n  return <Error>{children}</Error>;\n};\n","import styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n  margin: 26px auto 16px auto;\n\n  max-width: 100%;\n\n  @media (min-width: 768px) {\n    margin: 20px auto 16px auto;\n    max-width: 600px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n`;\n","import { Link } from 'react-router-dom';\nimport image from '../../images/rickMorty.png';\nimport { Image, StyledDiv } from './PageHero.styled';\n\nexport const PageHero = () => {\n  return (\n    <StyledDiv>\n      <Link to={'/'}>\n        <Image src={image} alt=\"Rick and Morty\" />\n      </Link>{' '}\n    </StyledDiv>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CharaclersList = styled.ul`\n  margin-bottom: 188px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    column-gap: 20px;\n    row-gap: 24px;\n  }\n`;\n\nexport const CharacterItem = styled.li`\n  margin-bottom: 32px;\n  flex-basis: 100%;\n  min-height: 244px;\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12),\n    0px 2px 4px rgba(0, 0, 0, 0.14);\n  border-radius: 4px;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 2);\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 1440px) {\n    flex-basis: calc((100% - (3 * 20px)) / 4);\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  opacity: 1;\n\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    opacity: 0.6;\n  }\n`;\n\nexport const CharacterImageThumb = styled.div`\n  max-width: 100%;\n  height: 232px;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    height: 334px;\n  }\n\n  @media (min-width: 1440px) {\n    height: 168px;\n  }\n`;\n\nexport const CharacterImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: 0 -36px;\n`;\n\nexport const CharacterMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  gap: 1px;\n  padding: 12px 16px;\n`;\n\nexport const CharacterName = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nexport const CharacterSpecies = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n","import {\n  CharaclersList,\n  CharacterImage,\n  CharacterImageThumb,\n  CharacterItem,\n  CharacterMeta,\n  CharacterName,\n  CharacterSpecies,\n  StyledLink,\n} from './CharactersGallery.styled';\n\nexport const CharactersGallery = ({ characters, location }) => {\n  return (\n    <CharaclersList>\n      {characters.map(({ id, name, image, species }) => {\n        return (\n          <CharacterItem key={id}>\n            <StyledLink to={`/characters/${id}`} state={{ from: location }}>\n              <CharacterImageThumb>\n                <CharacterImage src={image} alt={name} />\n              </CharacterImageThumb>\n\n              <CharacterMeta>\n                <CharacterName>{name}</CharacterName>\n                <CharacterSpecies>{species}</CharacterSpecies>\n              </CharacterMeta>\n            </StyledLink>\n          </CharacterItem>\n        );\n      })}\n    </CharaclersList>\n  );\n};\n","import styled from 'styled-components';\nimport { BiSearchAlt2 } from 'react-icons/bi';\n\nexport const StyledInputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 32px;\n  width: 100%;\n  height: 56px;\n\n  @media (min-width: 1440px) {\n    margin-bottom: 54px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 100%;\n  padding: 16px 16px 16px 48px;\n  font-size: 16px;\n  color: #000000;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  transition: all 250ms ease-out;\n\n  :valid,\n  :focus {\n    border: 1px solid #000000;\n  }\n`;\n\nexport const SearchIcon = styled(BiSearchAlt2)`\n  position: absolute;\n  left: 16px;\n  top: 16px;\n  color: rgba(0, 0, 0, 0.54);\n`;\n","import { Input, SearchIcon, StyledInputWrapper } from './FilterForm.styled';\n\nexport const FilterForm = ({ onChange }) => {\n  return (\n    <StyledInputWrapper>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        required=\"required\"\n        onChange={onChange}\n        placeholder=\"Filter by name...\"\n      />\n      <SearchIcon size={24} />\n    </StyledInputWrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { PageHero } from 'components/PageHero/PageHero';\nimport { CharactersGallery } from 'components/CharactersGallery/CharactersGallery';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { FilterForm } from 'components/FilterForm/FilterForm';\n\nimport { getAllCharacters, getCharacterByName } from 'services/charactersApi';\n\nconst HomePage = () => {\n  const [characters, setCharacters] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const characterName = searchParams?.get('name') ?? '';\n\n  useEffect(() => {\n    setError(null);\n\n    const getCharacters = async () => {\n      try {\n        const data = await getAllCharacters();\n        const sortedCharacters = data.results\n          .map(({ id, name, image, species }) => {\n            return { id, name, image, species };\n          })\n          .sort((firstCharacter, secondCharacter) =>\n            firstCharacter.name.localeCompare(secondCharacter.name)\n          );\n\n        setCharacters(sortedCharacters);\n      } catch (error) {\n        if (error.response.status === 404) {\n          return setError('Not found');\n        }\n        setError('Something went wrong');\n      }\n    };\n\n    const getFilteredCharacters = async () => {\n      try {\n        const data = await getCharacterByName(characterName);\n\n        if (data === []) {\n          setError('We did not find anything');\n        }\n\n        const sortedCharacters = data.results\n          .map(({ id, name, image, species }) => {\n            return { id, name, image, species };\n          })\n          .sort((firstCharacter, secondCharacter) =>\n            firstCharacter.name.localeCompare(secondCharacter.name)\n          );\n\n        setCharacters(sortedCharacters);\n      } catch (error) {\n        if (error.response.status === 404) {\n          return setError('Not found');\n        }\n        setError('Something went wrong');\n      }\n    };\n\n    if (characterName) {\n      getFilteredCharacters(characterName);\n      return;\n    }\n    getCharacters();\n  }, [characterName]);\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const filterHandler = event => {\n    event.preventDefault();\n\n    const characterFilter = event.target.value;\n    updateQueryString(characterFilter);\n  };\n\n  return (\n    <main>\n      <PageHero />\n      <FilterForm onChange={filterHandler} />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      {characters.length > 0 && !error && (\n        <CharactersGallery characters={characters} location={location} />\n      )}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\nexport async function getAllCharacters() {\n  const axiosURL = '/character';\n  const { data } = await axios.get(axiosURL);\n  return data;\n}\n\nexport async function getCharacterByName(value) {\n  const axiosUrl = `character/?name=${value}`;\n  const { data } = await axios.get(axiosUrl);\n  return data;\n}\n\nexport async function getCharacterById(id) {\n  const axiosURL = `character/${id}`;\n  const { data } = await axios.get(axiosURL);\n  return data;\n}\n"],"names":["Error","styled","ErrorMessage","children","StyledDiv","Image","PageHero","to","src","image","alt","CharaclersList","CharacterItem","StyledLink","Link","CharacterImageThumb","CharacterImage","CharacterMeta","CharacterName","CharacterSpecies","CharactersGallery","characters","location","map","id","name","species","state","from","StyledInputWrapper","Input","SearchIcon","BiSearchAlt2","FilterForm","onChange","type","required","placeholder","size","useState","setCharacters","error","setError","useLocation","useSearchParams","searchParams","setSearchParams","characterName","get","useEffect","getCharacters","getAllCharacters","data","sortedCharacters","results","sort","firstCharacter","secondCharacter","localeCompare","response","status","getFilteredCharacters","getCharacterByName","event","preventDefault","characterFilter","target","value","length","axios","axiosUrl","getCharacterById","axiosURL"],"sourceRoot":""}